name: 验证GitHub Token并创建Gist

on:
    workflow_dispatch:  # 允许手动触发测试

jobs:
    test-token:
      runs-on: ubuntu-latest

      steps:
      - name: 验证GitHub Token
        run: |
          echo "正在验证GitHub Token..."

          # 验证Token基本权限
          user_info=$(curl -s \
            -H "Authorization: Bearer ${{ secrets.PUSH_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/user")

          if echo "$user_info" | grep -q '"login"'; then
            echo "✅ Token验证成功"
            username=$(echo "$user_info" | grep -o '"login":"[^"]*"' | sed 's/"login":"\(.*\)"/\1/')
            echo "👤 用户名: $username"
          else
            echo "❌ Token验证失败"
            echo "请检查PUSH_TOKEN是否有效且具有适当的权限"
            exit 1
          fi

          # 检查Gist是否存在
          echo "🔍 检查Gist是否存在..."
          gist_response=$(curl -s \
            -H "Authorization: Bearer ${{ secrets.PUSH_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/gists/${{ secrets.GIST_ID }}")

          if echo "$gist_response" | grep -q '"id"'; then
            echo "✅ Gist存在且可访问"
            echo "📋 Gist描述: $(echo "$gist_response" | grep -o '"description":"[^"]*"' | sed 's/"description":"\(.*\)"/\1/')"
            echo "📁 Gist文件:"
            echo "$gist_response" | grep -o '"filename":"[^"]*"' | sed 's/"filename":"\(.*\)"/  - \1/'
          else
            echo "⚠️  Gist不存在或无权访问"
            fi
          fi
